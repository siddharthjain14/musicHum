package com.example.cart.services.impl;

import com.example.cart.entity.Cart;
import com.example.cart.entity.CartItem;
import com.example.cart.entity.Inventory;
import com.example.cart.entity.InventoryItem;
import com.example.cart.repository.CartRepository;
import com.example.cart.repository.InventoryRepository;
import com.example.cart.services.InventoryService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

@Service
public class InventoryServiceImplementation implements InventoryService {
    @Autowired
    private InventoryRepository inventoryRepository;
    @Autowired
    private CartRepository cartRepository;

    public List<Float> getProductCountAndCost(String pid, String did) {
        return (List<Float>) inventoryRepository.findByPid(pid).getListOfDid().get(did);
    }

    public void addItemToInventory(String pid,String did,float cost,float count){
        HashMap<String,List<Float>> map=new HashMap<>();
        List<Float> list=new ArrayList<>();
        list.add(cost);
        list.add(count);
        map.put(did,list);
        Inventory inventory=new Inventory();
        inventory.setPid(pid);
        inventory.setListOfDid(map);
        inventoryRepository.save(inventory);
    }

    public void setProductCountAndCost(String pid, String did, float count,float cost) {
        Inventory inventory = inventoryRepository.findByPid(pid);
        if( inventory==null){
            addItemToInventory(pid,did,cost,count);
        }
        else {
            HashMap<String, List<Float>> map = inventory.getListOfDid();
            List<Float> countAndCost = map.get(did);
            countAndCost.set(0, count);
            countAndCost.set(1, cost);
            map.put(did, countAndCost);
            inventory.setListOfDid(map);
            inventoryRepository.save(inventory);
        }
    }

    public void clearCart(String userName) {
        Cart c = cartRepository.findByUserName(userName);
        List<CartItem> cartItems = c.getCartItemList();

        for (CartItem cartItem : cartItems) {
            Inventory inventory = inventoryRepository.findByPid(cartItem.getId());
            HashMap<String, List<Float>> map = inventory.getListOfDid();
            List<Float> items = map.get(cartItem.getDid());
            items.set(0, items.get(0) - 1);
            if(items.get(0)==0){
                map.remove(cartItem.getDid());
            }
            map.put(cartItem.getId(), items);
            inventory.setListOfDid(map);
            inventoryRepository.save(inventory);
            System.out.println("Deleted from cart "+cartItem.getName());
        }
        cartItems=new ArrayList<>();
        c.setCartItemList(cartItems);
        cartRepository.save(c);
    }

    public boolean checkItems(List<CartItem> cartItemList) {
        boolean entireCart = true;

        for (CartItem cartItem : cartItemList) {
            if (!checkItem(cartItem)) {
                entireCart = false;
                break;
            }
        }
        return entireCart;
    }

    public boolean checkItem(CartItem cartItem) {
        if (inventoryRepository.findByPid(cartItem.getId()).getListOfDid().containsKey(cartItem.getDid())) {
            return true;
        } else {
            return false;
        }
    }
    public void checkOut(String userName){
        Cart userCart=cartRepository.findByUserName(userName);
        List<CartItem> cartItems=userCart.getCartItemList();
        if(checkItems(cartItems)){
            synchronized (this){
                if(checkItems(cartItems)){
                    clearCart(userName);
                    System.out.println("This is an autogenerated email to politely ask you to clear the route");
                }
            }
        }
    }
    public List<InventoryItem> getInventoryItem(String pid,String type){
        HashMap<String,List<Float>> map=inventoryRepository.findByPid(pid).getListOfDid();
        List<InventoryItem> inventoryItemList=new ArrayList<InventoryItem>();
        for (String did:map.keySet()) {
            InventoryItem inventoryItem=new InventoryItem();
            inventoryItem.setDid(did);
            inventoryItem.setCost(map.get(did).get(1));
            inventoryItem.setPid(pid);
            inventoryItem.setType(type);
            inventoryItemList.add(inventoryItem);
        }
        return inventoryItemList;
    }

}
